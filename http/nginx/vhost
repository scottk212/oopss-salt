
##############################################################################
# oopss-infra
# Description : Oopss infrastructure files using SaltStack
# URL : https://github.com/oopss/oopss-infra
# Copyright 2013 Oopss.org <team@oopss.org>
##############################################################################

server {
    server_name{% for server_name in root_pathinfo['server_names'] %} {{ server_name }}{% endfor %};
    root {{ salt['pillar.get']('http:basedir') }}/{{ user }}/{{ root_path }};
    access_log {{ salt['pillar.get']('http:basedir') }}/{{ user }}/log/{{ root_path }}-access.log;
    error_log {{ salt['pillar.get']('http:basedir') }}/{{ user }}/log/{{ root_path }}-error.log;

{% if root_pathinfo['ssl'] is defined %}
    # Enable SSL if requested by pillar config.
    listen {{ root_pathinfo['ssl']['port']|default('443') }} ssl;
    ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
    ssl_certificate     /etc/ssl/{{ root_pathinfo['ssl']['cert'] }}.pem;
    ssl_certificate_key /etc/ssl/{{ root_pathinfo['ssl']['cert'] }}.pem;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
{% endif %}

    location /awstats/ {
        alias /var/cache/awstats/{{ user }}-{{ root_path }}/;
        autoindex on;
        index index.en.html;
        auth_basic "Awstats {{ root_pathinfo['server_names'][0] }}";
        auth_basic_user_file {{ salt['pillar.get']('http:basedir') }}/{{ user }}/.htpasswd;
    }

    include "/etc/nginx/common.conf";

{% if root_pathinfo['denied_paths'] is defined %}
{% for denied_path in root_pathinfo['denied_paths'] %}
    # Forbid access to paths defined in pillar denied_path.
    location ~ {{ denied_path }} {
        deny all;
    }
{% endfor %}
{% endif %}

{# Begin config_tags configuration. #}
{% if root_pathinfo['config_tags'] is defined %}

{% if 'gunicorn' in root_pathinfo['config_tags'] %}
    # Redirect request to HTTP proxy via UNIX socket, if no file matches.
    location @http_proxy {
        proxy_pass http://unix:{{ socket }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
        try_files $uri @http_proxy;
    }
{% endif %}

{% if 'php5' in root_pathinfo['config_tags'] %}
    # Redirect URL ending with .php to PHP-FPM.
    index index.html index.php;
    location ~* \.php$ {
        fastcgi_pass unix:{{ socket }};
        include fastcgi_params;
    }
{% endif %}

{% if 'wordpress' in root_pathinfo['config_tags'] %}
    # Redirect each request to index.php if no file matches.
    location / {
       try_files $uri $uri/ /index.php?$args;
    }
{% endif %}

{# End config_tags configuration. #}
{% endif %}

}

{% if root_pathinfo['redirect_from'] is defined %}
# Redirect each server name specified in redirect_from (from pillar config) to
# the main server name of the virtual server.
server {
    server_name{% for redirect_from in root_pathinfo['redirect_from'] %} {{ redirect_from }}{% endfor %};
    return 301 http://{{ root_pathinfo['server_names'][0] }}$request_uri;
}
{% endif %}

{% if root_pathinfo['ssl'] is defined %}
# If this is a SSL virtual server, redirect each server name called without SSL
# to the SSL counterpart.
server {
    server_name{% for server_name in root_pathinfo['server_names'] %} {{ server_name }}{% endfor %};
    return 301 https://$host$request_uri;
}
{% endif %}

