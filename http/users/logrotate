{{ salt['pillar.get']('http:basedir') }}/{{ user }}/log/{{ root_path }}-access.log {{ salt['pillar.get']('http:basedir') }}/{{ user }}/log/{{ root_path }}-error.log {
    daily
    size 0
    rotate 1
    create 640 www-data {{ user }}

    sharedscripts
    postrotate
        wwwuser="{{ user }}"
        wwwroot="{{ root_path }}"
        logdir="{{ salt['pillar.get']('http:basedir') }}/$wwwuser/log/"
        year=$(date -d yesterday +%Y)
        month=$(date -d yesterday +%m)
        day=$(date -d yesterday +%d)
        datepath="$year/$month/$day"

        # Instruct NGINX to start writing to new logfile
        [ ! -f /var/run/nginx.pid ] || kill -USR1 `cat /var/run/nginx.pid`

        # Run Awstats if config file available
        if [ -r "/etc/awstats/awstats.$wwwuser-$wwwroot.conf" ]; then
            /usr/lib/cgi-bin/awstats.pl \
                -config="$wwwuser-$wwwroot" \
                -LogFile=$logdir/$wwwroot-access.log.1 -update >/dev/null
        fi

        # Create directory tree for log archive
        for dir in $logdir/$year $logdir/$year/$month $logdir/$year/$month/$day; do
            [ -d $dir ] || { mkdir -m 750 $dir; chown root:$wwwuser $dir; }
        done

        # Archive and compress log file
        for logfilename in access.log error.log; do
            archivelogfilename="$logdir/$datepath/$wwwroot-$logfilename"
            mv $logdir/$wwwroot-$logfilename.1 $archivelogfilename
            chown root:$wwwuser $archivelogfilename
            bzip2 $archivelogfilename
        done
    endscript
}

